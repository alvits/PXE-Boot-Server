# ensure script is sourced
if [ "$_" == "$0" ]; then
	echo "Don't run this script. Source it."
	exit
fi
customizeOpenStack() {
if [ -f /usr/local/Downloads/include/hosts/${HOSTSFILE##*/} ]; then
	${CAT}<<-EOF
		sed -i '/${HOST}\$/d' /etc/hosts
		cat<<-hostsEOF >> /etc/hosts
			%include ${SOURCE}/include/hosts/${HOSTSFILE##*/}
		hostsEOF
	EOF
fi
if [ -n "${NOVA_KEY##*/}" ]; then
	${CAT}<<-EOF
		mkdir --mode=0700 \$(getent passwd nova | cut -d: -f6)/.ssh
		cat<<-sshkeyEOF > \$(getent passwd nova | cut -d: -f6)/.ssh/id_rsa
			%include ${SOURCE}/include/ssh-keys/${NOVA_KEY##*/}
		sshkeyEOF
		chmod 0700 \$(getent passwd nova | cut -d: -f6)/.ssh/id_rsa
		cat<<-authEOF > \$(getent passwd nova | cut -d: -f6)/.ssh/authorized_keys
			%include ${SOURCE}/include/ssh-keys/${NOVA_KEY##*/}.pub
		authEOF
		chmod 0644 \$(getent passwd nova | cut -d: -f6)/.ssh/authorized_keys
		chown -R nova:\$(id -gn nova) \$(getent passwd nova | cut -d: -f6)/.ssh
		usermod -s /bin/bash nova
	EOF
fi
${CAT}<<-EOF
	yum -y install PyYAML
	rm -f /etc/sysconfig/network-scripts/ifcfg-bond0
	sed -i '/DHCP_HOSTNAME\|NM_CONTROLLED/d;s/^\(ONBOOT=\).*/\1yes/g' /etc/sysconfig/network-scripts/ifcfg-eth1
	sed -i 's/^.*\((xend-unix-server\s*\)\(yes\|no\)).*/\1yes)/g;s/^\(.*(xend-relocation-ssl-server[^)]*).*\)$/#\1/g;s/^.*\((xend-unix-path[^)]*)\).*$/\1/g;s/^\([^#]*(xend-domains-lock-path[^)]*).*\)$/#\1/g' /etc/xen/xend-config.sxp
	sed -i '/^elif \[ -d "\/sys\/module\/openvswitch" \]; then/{s/^\(elif\)/\1 false \&\&/g}' /etc/xen/scripts/vif-setup
	rm -f /etc/init/ovs-console-tty.conf
	sed -i '/^.*&& continue.*$/d' /etc/init/start-ttys.conf
	sed -i 's/^\(ACTIVE_CONSOLES=\/dev\/tty\[\)[0-9]\(-[0-9]*\]\).*$/\11\2/g' /etc/sysconfig/init
	sed -i '/\[ol6_UEKR4\]/,+4{s/^\(enabled\)=./\1=1/g}' /etc/yum.repos.d/ULN-Base.repo
	sed -i 's/^.*\(LIBVIRTD_ARGS="--listen"\).*$/\1/g' /etc/sysconfig/libvirtd
	sed -i 's/^.*\(listen_tls = 0\).*$/\1/g;s/^.*\(listen_tcp = 1\).*$/\1/g;s/^.*\(auth_tcp = "none"\).*$/\1/g' /etc/libvirt/libvirtd.conf
EOF
if [ ${HOST} == "${CONTROLLER:-cas-opstack1}" ]; then
	${CAT}<<-EOF
		sed -i '/DHCP_HOSTNAME\|NM_CONTROLLED/d;s/^\(ONBOOT=\).*/\1yes/g' /etc/sysconfig/network-scripts/ifcfg-eth3
		sed -i 's/^\(net.ipv4.ip_forward\).*$/\1 = 1/g' /etc/sysctl.conf
		sed -i 's/^\(auth\)=.*/\1=no/g' /etc/qpidd.conf
		. /etc/sysconfig/memcached
		sed -i "s/^\([^#]*'BACKEND'.*backends\).*/\1.memcached.MemcachedCache',\n\t'LOCATION' : '${privateIP}:\$PORT'/g;s/^\(ALLOWED_HOSTS = \[\)/\1 '\$(hostname -i)', /g;s/^\(OPENSTACK_HOST\).*/\1 = '\$(hostname -i)'/g" /etc/openstack-dashboard/local_settings
		if grep -q '^bind-address' /etc/my.cnf; then
			${TAB}	sed -i 's/^\(bind-address\).*$/\1='\$(hostname -i)'/g' /etc/my.cnf
		else
			${TAB}	sed -i '/^\[mysqld\]/a bind-address='\$(hostname -i) /etc/my.cnf
		fi
		sed -i "/^\[mysqld\]/a default-storage-engine = innodb\ninnodb_file_per_table\ncollation-server = utf8_general_ci\ninit-connect = 'SET NAMES utf8'\ncharacter-set-server = utf8" /etc/my.cnf
		service mysqld start

		openstack-config --set /etc/keystone/keystone.conf database connection mysql://keystone:${KEYSTONE_DBPASS:-k3yst0neDBpw}@${CONTROLLER:-cas-opstack1}/keystone
		ADMIN_TOKEN=\$(openssl rand -hex 10)
		openstack-config --set /etc/keystone/keystone.conf DEFAULT admin_token \$ADMIN_TOKEN

		openstack-config --set /etc/glance/glance-api.conf database connection mysql://glance:${GLANCE_DBPASS:-glanc3DBpw}@${CONTROLLER:-cas-opstack1}/glance
		openstack-config --set /etc/glance/glance-registry.conf database connection mysql://glance:${GLANCE_DBPASS:-glanc3DBpw}@${CONTROLLER:-cas-opstack1}/glance

		openstack-config --set /etc/cinder/cinder.conf database connection mysql://cinder:${CINDER_DBPASS:-c1nd3rDBpw}@${CONTROLLER:-cas-opstack1}/cinder

		openstack-config --set /etc/nova/nova.conf database connection mysql://nova:${NOVA_DBPASS:-n0vaDBpw}@${CONTROLLER:-cas-opstack1}/nova

		openstack-config --set /etc/glance/glance-api.conf keystone_authtoken auth_uri http://${CONTROLLER:-cas-opstack1}:5000
		openstack-config --set /etc/glance/glance-api.conf keystone_authtoken auth_host ${CONTROLLER:-cas-opstack1}
		openstack-config --set /etc/glance/glance-api.conf keystone_authtoken auth_port 35357
		openstack-config --set /etc/glance/glance-api.conf keystone_authtoken auth_protocol http
		openstack-config --set /etc/glance/glance-api.conf keystone_authtoken admin_tenant_name service
		openstack-config --set /etc/glance/glance-api.conf keystone_authtoken admin_user glance
		openstack-config --set /etc/glance/glance-api.conf keystone_authtoken admin_password ${GLANCE_PASS:-glanc3pw}
		openstack-config --set /etc/glance/glance-api.conf paste_deploy flavor keystone
		openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken auth_uri http://${CONTROLLER:-cas-opstack1}:5000
		openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken auth_host ${CONTROLLER:-cas-opstack1}
		openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken auth_port 35357
		openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken auth_protocol http
		openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken admin_tenant_name service
		openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken admin_user glance
		openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken admin_password ${GLANCE_PASS:-glanc3pw}
		openstack-config --set /etc/glance/glance-registry.conf paste_deploy flavor keystone

		MYSQL_ROOTPASS=\$(tr -dc [:alnum:]-_+,.= < /dev/urandom | head -c 11)
		echo -n \$MYSQL_ROOTPASS > /var/lib/mysql/generated_password.txt
		chmod 0600 /var/lib/mysql/generated_password.txt
		/usr/bin/mysqladmin -u root password "\$MYSQL_ROOTPASS"
		/usr/bin/mysqladmin -u root -h ${CONTROLLER:-cas-opstack1} password "\$MYSQL_ROOTPASS"
		mysql -uroot -p"\$MYSQL_ROOTPASS" <<-mysqlEOF
			${TAB}	DROP DATABASE test;
			${TAB}	DELETE FROM mysql.user WHERE User='';
			${TAB}	CREATE DATABASE keystone;
			${TAB}	GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY '${KEYSTONE_DBPASS:-k3yst0neDBpw}';
			${TAB}	GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY '${KEYSTONE_DBPASS:-k3yst0neDBpw}';
			${TAB}	CREATE DATABASE glance;
			${TAB}	GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' IDENTIFIED BY '${GLANCE_DBPASS:-glanc3DBpw}';
			${TAB}	GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' IDENTIFIED BY '${GLANCE_DBPASS:-glanc3DBpw}';
			${TAB}	CREATE DATABASE nova;
			${TAB}	GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY '${NOVA_DBPASS:-n0vaDBpw}';
			${TAB}	GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY '${NOVA_DBPASS:-n0vaDBpw}';
			${TAB}	CREATE DATABASE neutron;
			${TAB}	GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' IDENTIFIED BY '${NEUTRON_DBPASS:-neutr0nDBpw}';
			${TAB}	GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' IDENTIFIED BY '${NEUTRON_DBPASS:-neutr0nDBpw}';
			${TAB}	CREATE DATABASE cinder;
			${TAB}	GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'localhost' IDENTIFIED BY '${CINDER_DBPASS:-c1nd3rDBpw}';
			${TAB}	GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'%' IDENTIFIED BY '${CINDER_DBPASS:-c1nd3rDBpw}';
			${TAB}	FLUSH PRIVILEGES;
		mysqlEOF
		sleep 60
		su -s /bin/sh -c "keystone-manage db_sync" keystone
		su -s /bin/sh -c "glance-manage db_sync" glance
		su -s /bin/sh -c "cinder-manage db sync" cinder
		su -s /bin/sh -c "nova-manage db sync" nova
		keystone-manage pki_setup --keystone-user keystone --keystone-group keystone
		chown -R keystone:keystone /etc/keystone/ssl
		chmod -R o-rwx /etc/keystone/ssl
		SELINUX=\$(getenforce)
		setenforce permissive
		service openstack-keystone start
		sleep 120
		#chkconfig openstack-keystone on
		#chkconfig openstack-glance-api on
		#chkconfig openstack-glance-registry on
		#chkconfig openstack-nova-api on
		#chkconfig openstack-nova-cert on
		#chkconfig openstack-nova-consoleauth on
		#chkconfig openstack-nova-scheduler on
		#chkconfig openstack-nova-conductor on
		#chkconfig openstack-nova-novncproxy on
		#chkconfig openstack-cinder-api on
		#chkconfig openstack-cinder-scheduler on
		echo "01 * * * * keystone /usr/bin/keystone-manage token_flush >/var/log/keystone/keystone-tokenflush.log 2>&1" > /etc/cron.d/keystone.cron

		export OS_SERVICE_TOKEN=\$ADMIN_TOKEN
		export OS_SERVICE_ENDPOINT=http://${CONTROLLER:-cas-opstack1}:35357/v2.0

		echo OS_SERVICE_TOKEN=\$OS_SERVICE_TOKEN
		echo OS_SERVICE_ENDPOINT=\$OS_SERVICE_ENDPOINT

		#Create Admin
		keystone user-create --name=admin --pass=${ADMIN_PASS:-Adm1npw} --email=admin@oracle.com

		keystone role-create --name=admin

		keystone tenant-create --name=admin --description="Admin Tenant"

		keystone user-role-add --user=admin --tenant=admin --role=admin

		keystone user-role-add --user=admin --role=_member_ --tenant=admin

		#Create demo user
		keystone user-create --name=demo --pass=${DEMO_PASS:-d3m0pw} --email=demo.user@oracle.com

		keystone tenant-create --name=demo --description="Demo Tenant"

		keystone user-role-add --user=demo --role=_member_ --tenant=demo

		# Create service tenant
		keystone tenant-create --name=service --description="Service Tenant"

		# Create service entry for the identity service
		keystone service-create --name=keystone --type=identity --description="OpenStack Identity"

		#Specify an endpoint
		keystone endpoint-create --service-id=\$(keystone service-list | awk '/ identity / {print \$2}') --publicurl=http://${CONTROLLER:-cas-opstack1}:5000/v2.0 --internalurl=http://${CONTROLLER:-cas-opstack1}-internal:5000/v2.0 --adminurl=http://${CONTROLLER:-cas-opstack1}:35357/v2.0

		#Create glance user
		keystone user-create --name=glance --pass=${GLANCE_PASS:-glanc3pw} --email=glance@oracle.com
		keystone user-role-add --user=glance --tenant=service --role=admin

		# Register the image service
		keystone service-create --name=glance --type=image --description="OpenStack Image Service"
		keystone endpoint-create --service-id=\$(keystone service-list | awk '/ image / {print \$2}') --publicurl=http://${CONTROLLER:-cas-opstack1}:9292 --internalurl=http://${CONTROLLER:-cas-opstack1}-internal:9292 --adminurl=http://${CONTROLLER:-cas-opstack1}:9292

		# Create nova keystone user
		keystone user-create --name=nova --pass=${NOVA_PASS:-n0vapw} --email=nova@oracle.com
		keystone user-role-add --user=nova --tenant=service --role=admin

		# Register compute with the services
		keystone service-create --name=nova --type=compute --description="OpenStack Compute"
		keystone endpoint-create --service-id=\$(keystone service-list | awk '/ compute / {print \$2}') --publicurl=http://${CONTROLLER:-cas-opstack1}:8774/v2/%\(tenant_id\)s --internalurl=http://${CONTROLLER:-cas-opstack1}-internal:8774/v2/%\(tenant_id\)s --adminurl=http://${CONTROLLER:-cas-opstack1}:8774/v2/%\(tenant_id\)s

		# create neutron keystone user
		keystone user-create --name neutron --pass ${NEUTRON_PASS:-neutr0npw} --email neutron@eoracle.com

		keystone user-role-add --user neutron --tenant service --role admin

		keystone service-create --name neutron --type network --description "OpenStack Networking"

		keystone endpoint-create --service-id \$(keystone service-list | awk '/ network / {print \$2}') --publicurl http://${CONTROLLER:-cas-opstack1}:9696 --adminurl http://${CONTROLLER:-cas-opstack1}:9696 --internalurl http://${CONTROLLER:-cas-opstack1}-internal:9696

		# Create cinder user
		keystone user-create --name=cinder --pass=${CINDER_PASS:-c1nd3rpw} --email=cinder@oracle.com
		keystone user-role-add --user=cinder --tenant=service --role=admin

		# Create object store user
		keystone user-create --name=swift --pass=${SWIFT_PASS:-sw1ftpw} --email=swift@oracle.com
		keystone user-role-add --user=swift --tenant=service --role=admin

		yum -y install openstack-neutron openstack-neutron-ml2 openstack-neutron-openvswitch

		openstack-config --set /etc/neutron/neutron.conf database connection mysql://neutron:${NEUTRON_DBPASS:-neutr0nDBpw}@${CONTROLLER:-cas-opstack1}/neutron

		# configure L3
		openstack-config --set /etc/neutron/l3_agent.ini DEFAULT interface_driver neutron.agent.linux.interface.OVSInterfaceDriver
		openstack-config --set /etc/neutron/l3_agent.ini DEFAULT use_namespaces True

		# configure dhcp agent
		openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT interface_driver neutron.agent.linux.interface.OVSInterfaceDriver
		openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT dhcp_driver neutron.agent.linux.dhcp.Dnsmasq
		openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT use_namespaces True

		openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT dnsmasq_config_file /etc/neutron/dnsmasq-neutron.conf

		echo -n "dhcp-option-force=26,1454" > /etc/neutron/dnsmasq-neutron.conf

		#configure metadata agent
		openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT auth_url http://${CONTROLLER:-cas-opstack1}:5000/v2.0
		openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT auth_region regionOne
		openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT admin_tenant_name service
		openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT admin_user neutron
		openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT admin_password ${NEUTRON_PASS:-neutr0npw}
		openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT nova_metadata_ip ${CONTROLLER:-cas-opstack1}
		openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT metadata_proxy_shared_secret ${METADATA_SECRET:-mds3cr3t}

		# on controller configure to use metadata
		openstack-config --set /etc/nova/nova.conf DEFAULT service_neutron_metadata_proxy true
		openstack-config --set /etc/nova/nova.conf DEFAULT neutron_metadata_proxy_shared_secret ${METADATA_SECRET:-mds3cr3t}

		# Notify Compute About Networking changes
		openstack-config --set /etc/neutron/neutron.conf DEFAULT notify_nova_on_port_status_changes True
		openstack-config --set /etc/neutron/neutron.conf DEFAULT notify_nova_on_port_data_changes True
		openstack-config --set /etc/neutron/neutron.conf DEFAULT nova_url http://${CONTROLLER:-cas-opstack1}:8774/v2
		openstack-config --set /etc/neutron/neutron.conf DEFAULT nova_admin_username nova
		openstack-config --set /etc/neutron/neutron.conf DEFAULT nova_admin_tenant_id \$(keystone tenant-list | awk '/ service / { print \$2 }')
		openstack-config --set /etc/neutron/neutron.conf DEFAULT nova_admin_password ${NOVA_PASS:-n0vapw}
		openstack-config --set /etc/neutron/neutron.conf DEFAULT nova_admin_auth_url http://${CONTROLLER:-cas-opstack1}:35357/v2.0

		# Edit cinder.conf
		openstack-config --set /etc/cinder/cinder.conf DEFAULT auth_strategy keystone
		openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_uri http://${CONTROLLER:-cas-opstack1}:5000
		openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_host ${CONTROLLER:-cas-opstack1}
		openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_protocol http
		openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_port 35357
		openstack-config --set /etc/cinder/cinder.conf keystone_authtoken admin_user cinder
		openstack-config --set /etc/cinder/cinder.conf keystone_authtoken admin_tenant_name service
		openstack-config --set /etc/cinder/cinder.conf keystone_authtoken admin_password ${CINDER_PASS:-c1nd3rpw}
		openstack-config --set /etc/cinder/cinder.conf DEFAULT glance_host ${CONTROLLER:-cas-opstack1}
		openstack-config --set /etc/cinder/cinder.conf DEFAULT volume_clear none

		#Configure block storage to use message broker
		openstack-config --set /etc/cinder/cinder.conf DEFAULT rpc_backend qpid
		openstack-config --set /etc/cinder/cinder.conf DEFAULT qpid_hostname ${CONTROLLER:-cas-opstack1}

		#Register Block Storage with the Identity Service
		keystone service-create --name=cinder --type=volume --description="OpenStack Block Storage"
		keystone endpoint-create --service-id=\$(keystone service-list | awk '/ volume / {print \$2}') --publicurl=http://${CONTROLLER:-cas-opstack1}:8776/v1/%\(tenant_id\)s --internalurl=http://${CONTROLLER:-cas-opstack1}-internal:8776/v1/%\(tenant_id\)s --adminurl=http://${CONTROLLER:-cas-opstack1}:8776/v1/%\(tenant_id\)s

		# Register a service endpoint for version 2
		keystone service-create --name=cinderv2 --type=volumev2 --description="OpenStack Block Storage v2"
		keystone endpoint-create --service-id=\$(keystone service-list | awk '/ volumev2 / {print \$2}') --publicurl=http://${CONTROLLER:-cas-opstack1}:8776/v2/%\(tenant_id\)s --internalurl=http://${CONTROLLER:-cas-opstack1}-internal:8776/v2/%\(tenant_id\)s --adminurl=http://${CONTROLLER:-cas-opstack1}:8776/v2/%\(tenant_id\)s

		#Register object store with the identity service
		keystone service-create --name=swift --type=object-store   --description="OpenStack Object Storage"
		keystone endpoint-create --service-id=\$(keystone service-list | awk '/ object-store / {print \$2}') --publicurl='http://${CONTROLLER:-cas-opstack1}:8080/v1/AUTH_%(tenant_id)s' --internalurl='http://${CONTROLLER:-cas-opstack1}-internal:8080/v1/AUTH_%(tenant_id)s' --adminurl=http://${CONTROLLER:-cas-opstack1}:8080

		service openstack-keystone stop
		sleep 60
		service mysqld stop
		sleep 120
		setenforce \$SELINUX
	EOF
fi

if [ -n "${CINDERHOST}" ]; then
	if [ ${HOST} == ${CINDERHOST} ]; then
		${CAT}<<-EOF
			# Edit cinder.conf
			openstack-config --set /etc/cinder/cinder.conf database connection mysql://cinder:${CINDER_DBPASS:-c1nd3rDBpw}@${CONTROLLER:-cas-opstack1}/cinder
			openstack-config --set /etc/cinder/cinder.conf DEFAULT auth_strategy keystone
			openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_uri http://${CONTROLLER:-cas-opstack1}:5000
			openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_host ${CONTROLLER:-cas-opstack1}
			openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_protocol http
			openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_port 35357
			openstack-config --set /etc/cinder/cinder.conf keystone_authtoken admin_user cinder
			openstack-config --set /etc/cinder/cinder.conf keystone_authtoken admin_tenant_name service
			openstack-config --set /etc/cinder/cinder.conf keystone_authtoken admin_password ${CINDER_PASS:-c1nd3rpw}
			openstack-config --set /etc/cinder/cinder.conf DEFAULT glance_host ${CONTROLLER:-cas-opstack1}
			openstack-config --set /etc/cinder/cinder.conf DEFAULT volume_clear none

			#Configure block storage to use message broker
			openstack-config --set /etc/cinder/cinder.conf DEFAULT rpc_backend qpid
			openstack-config --set /etc/cinder/cinder.conf DEFAULT qpid_hostname ${CONTROLLER:-cas-opstack1}
		EOF
		if [ -n "${NFS_SERVER}" -a -n "${NFS_PATH}" ]; then
			${CAT}<<-EOF
				# Create /etc/cinder/nfsshares containing host:path
				echo \${NFS_SERVER}:\${NFS_PATH} > /etc/cinder/nfsshares
				openstack-config --set /etc/cinder/cinder.conf DEFAULT nfs_shares_config /etc/cinder/nfsshares

				# Set cinder to use nfs driver
				openstack-config --set /etc/cinder/cinder.conf DEFAULT volume_driver cinder.volume.drivers.nfs.NfsDriver
			EOF
		fi

		${CAT}<<-EOF
			chkconfig openstack-cinder-volume on
		EOF
	fi
else
	if [ ${HOST} == ${CONTROLLER:-cas-opstack1} ]; then
		if [ -n "${NFS_SERVER}" -a -n "${NFS_PATH}" ]; then
			${CAT}<<-EOF
				# Create /etc/cinder/nfsshares containing host:path
				echo \${NFS_SERVER}:\${NFS_PATH} > /etc/cinder/nfsshares
				openstack-config --set /etc/cinder/cinder.conf DEFAULT nfs_shares_config /etc/cinder/nfsshares

				# Set cinder to use nfs driver
				openstack-config --set /etc/cinder/cinder.conf DEFAULT volume_driver cinder.volume.drivers.nfs.NfsDriver
			EOF
		fi

		${CAT}<<-EOF
			chkconfig openstack-cinder-volume on
		EOF
	fi
fi

${CAT}<<-EOF
	openstack-config --set /etc/nova/nova.conf DEFAULT vncserver_listen 0.0.0.0
	openstack-config --set /etc/nova/nova.conf DEFAULT novncproxy_base_url http://${CONTROLLER_IP:-${CONTROLLER:-10.132.60.141}}:6080/vnc_auto.html
	openstack-config --set /etc/nova/nova.conf database connection mysql://nova:${NOVA_DBPASS:-n0vaDBpw}@${CONTROLLER:-cas-opstack1}/nova

	rpm -i --force ${SOURCE}/asv/3OVM/base/RPMS/x86_64/kmod-openvswitch-1.11.0-1.el6.x86_64.rpm

	cat<<-OPENRC > /root/.admin-openrc.sh
	${TAB}	export OS_USERNAME=admin
	${TAB}	export OS_PASSWORD=${ADMIN_PASS:-Adm1npw}
	${TAB}	export OS_TENANT_NAME=admin
	${TAB}	export OS_AUTH_URL=http://${CONTROLLER:-cas-opstack1}:35357/v2.0
	OPENRC

	cat<<-OPENRC > /root/.demo-openrc.sh
	${TAB}	export OS_USERNAME=demo
	${TAB}	export OS_PASSWORD=${DEMO_PASS:-d3m0pw}
	${TAB}	export OS_TENANT_NAME=demo
	${TAB}	export OS_AUTH_URL=http://${CONTROLLER:-cas-opstack1}:35357/v2.0
	OPENRC

	openstack-config --set /etc/nova/nova.conf DEFAULT auth_strategy keystone
	openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_uri http://${CONTROLLER:-cas-opstack1}:5000
	openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_host ${CONTROLLER:-cas-opstack1}
	openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_protocol http
	openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_port 35357
	openstack-config --set /etc/nova/nova.conf keystone_authtoken admin_user nova
	openstack-config --set /etc/nova/nova.conf keystone_authtoken admin_tenant_name service
	openstack-config --set /etc/nova/nova.conf keystone_authtoken admin_password ${NOVA_PASS:-n0vapw}

	openstack-config --set /etc/nova/nova.conf DEFAULT rpc_backend qpid
	openstack-config --set /etc/nova/nova.conf DEFAULT qpid_hostname ${CONTROLLER:-cas-opstack1}

	openstack-config --set /etc/nova/nova.conf DEFAULT my_ip \$(hostname -i)
	openstack-config --set /etc/nova/nova.conf DEFAULT vnc_enabled True
	openstack-config --set /etc/nova/nova.conf DEFAULT vncserver_proxyclient_address \$(hostname -i)

	openstack-config --set /etc/nova/nova.conf DEFAULT glance_host ${CONTROLLER:-cas-opstack1}

	openstack-config --set /etc/nova/nova.conf libvirt virt_type xen

	openstack-config --set /etc/nova/nova.conf libvirt live_migration_uri xen+tcp://%s/

	openstack-config --set /etc/nova/nova.conf libvirt disk_prefix xvd

	openstack-config --set /etc/nova/nova.conf DEFAULT use_cow_images false

	cat<<-swiftEOF > /etc/switft/swift.conf
		%include ${SOURCE}/include/swift/${SWIFTCONF##*/}
	swiftEOF

	chown swift:swift /srv/node /srv/node/sdb /etc/swift/swift.conf

	cat<<-swiftEOF > /etc/rsyncd.conf
		${TAB}	uid = swift
		${TAB}	gid = swift
		${TAB}	log file = /var/log/rsyncd.log
		${TAB}	pid file = /var/run/rsyncd.pid
		${TAB}	address = ${privateIP}

		${TAB}	[account]
		${TAB}	max connections = 2
		${TAB}	path = /srv/node/
		${TAB}	read only = false
		${TAB}	lock file = /var/lock/account.lock

		${TAB}	[container]
		${TAB}	max connections = 2
		${TAB}	path = /srv/node/
		${TAB}	read only = false
		${TAB}	lock file = /var/lock/container.lock

		${TAB}	[object]
		${TAB}	max connections = 2
		${TAB}	path = /srv/node/
		${TAB}	read only = false
		${TAB}	lock file = /var/lock/object.lock
	swiftEOF

	mkdir -p /var/swift/recon
	chown -R swift:swift /var/swift/recon

	openstack-config --set /etc/swift/account-server.conf DEFAULT bind_ip ${privateIP}
	openstack-config --set /etc/swift/container-server.conf DEFAULT bind_ip ${privateIP}
	openstack-config --set /etc/swift/object-server.conf DEFAULT bind_ip ${privateIP}

	yum -y install openstack-neutron-ml2 openstack-neutron-openvswitch
	openstack-config --set /etc/neutron/neutron.conf DEFAULT auth_strategy keystone
	openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_uri http://${CONTROLLER:-cas-opstack1}:5000
	openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_host ${CONTROLLER:-cas-opstack1}
	openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_protocol http
	openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_port 35357
	openstack-config --set /etc/neutron/neutron.conf keystone_authtoken admin_tenant_name service
	openstack-config --set /etc/neutron/neutron.conf keystone_authtoken admin_user neutron
	openstack-config --set /etc/neutron/neutron.conf keystone_authtoken admin_password ${NEUTRON_PASS:-neutr0npw}

	# configure to use message broker
	openstack-config --set /etc/neutron/neutron.conf DEFAULT rpc_backend neutron.openstack.common.rpc.impl_qpid
	openstack-config --set /etc/neutron/neutron.conf DEFAULT qpid_hostname ${CONTROLLER:-cas-opstack1}

	openstack-config --set /etc/neutron/neutron.conf DEFAULT core_plugin ${NEUTRON_PLUGIN:-ml2}
	if [ ${NEUTRON_PLUGIN:-ml2} == "ml2" ]; then
		openstack-config --set /etc/neutron/neutron.conf DEFAULT service_plugins router
	fi

	openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 type_drivers ${TYPE_DRIVERS:-gre}
	openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 mechanism_drivers openvswitch
	openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2_type_gre tunnel_id_ranges 1001:2000
	openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2_type_vxlan vni_ranges 1001:2000
	openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 tenant_network_types ${TYPE_DRIVERS:-gre}

	openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini agent tunnel_types ${TUNNEL_TYPE:-gre}
	openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ovs tenant_network_type ${TYPE_DRIVERS:-gre}
	openstack-config --set /etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini agent tunnel_types ${TUNNEL_TYPE:-gre}
	openstack-config --set /etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini ovs tenant_network_type ${TYPE_DRIVERS:-gre}

	openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ovs local_ip ${privateIP}
	openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ovs tunnel_type ${TUNNEL_TYPE:-gre}
	openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ovs enable_tunneling True
	openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ovs tunnel_id_ranges 1001:2000
	openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini securitygroup firewall_driver neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver
	openstack-config --set /etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini ovs local_ip ${privateIP}
	openstack-config --set /etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini ovs tunnel_type ${TUNNEL_TYPE:-gre}
	openstack-config --set /etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini ovs enable_tunneling True
	openstack-config --set /etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini ovs tunnel_id_ranges 1001:2000
	openstack-config --set /etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini securitygroup firewall_driver neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver
	openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini securitygroup enable_security_group True
	openstack-config --set /etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini securitygroup enable_security_group True

	openstack-config --set /etc/nova/nova.conf DEFAULT network_api_class nova.network.neutronv2.api.API
	openstack-config --set /etc/nova/nova.conf DEFAULT neutron_url http://${CONTROLLER:-cas-opstack1}:9696
	openstack-config --set /etc/nova/nova.conf DEFAULT neutron_auth_strategy keystone
	openstack-config --set /etc/nova/nova.conf DEFAULT neutron_admin_tenant_name service
	openstack-config --set /etc/nova/nova.conf DEFAULT neutron_admin_username neutron
	openstack-config --set /etc/nova/nova.conf DEFAULT neutron_admin_password ${NEUTRON_PASS:-neutr0npw}
	openstack-config --set /etc/nova/nova.conf DEFAULT neutron_admin_auth_url http://${CONTROLLER:-cas-opstack1}:35357/v2.0
	openstack-config --set /etc/nova/nova.conf DEFAULT linuxnet_interface_driver nova.network.linux_net.LinuxOVSInterfaceDriver
	openstack-config --set /etc/nova/nova.conf DEFAULT firewall_driver nova.virt.firewall.NoopFirewallDriver
	openstack-config --set /etc/nova/nova.conf DEFAULT security_group_api neutron
EOF

# Only required when using ML2 plugin
if [ ${NEUTRON_PLUGIN:-ml2} == "ml2" ]; then
	${CAT}<<-EOF
		PLUGIN_FILE=/etc/neutron/plugins/ml2/ml2_conf.ini
	EOF
else
	${CAT}<<-EOF
		PLUGIN_FILE=/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini
	EOF
fi
${CAT}<<-EOF
	ln -s \${PLUGIN_FILE//\/etc\/neutron\/} /etc/neutron/plugin.ini

	# Only required when using ML2 plugin
	sed -i.orig 's,plugins/openvswitch/ovs_neutron_plugin.ini,plugin.ini,g' /etc/init.d/neutron-openvswitch-agent

	service openvswitch start
	# add integration br
	ovs-vsctl add-br br-int &
	sleep 5
EOF

if [ ${HOST} == "${CONTROLLER:-cas-opstack1}" ]; then
	${CAT}<<-EOF
		# add external br
		ovs-vsctl add-br br-ex &
		sleep 5

		# add port to the bridge
		ovs-vsctl add-port br-ex eth1 &
		sleep 5

		#service openstack-nova-api restart
		#service openstack-nova-scheduler restart
		#service openstack-nova-conductor restart
		#service neutron-server start
		#service neutron-l3-agent start
		#service neutron-dhcp-agent start
		#service neutron-metadata-agent start
		chkconfig neutron-server on
		chkconfig neutron-l3-agent on
		chkconfig neutron-dhcp-agent on
		chkconfig neutron-metadata-agent on

		cd /etc/swift
		swift-ring-builder account.builder create 18 3 1
		swift-ring-builder container.builder create 18 3 1
		swift-ring-builder object.builder create 18 3 1

		curl ${SOURCE}/include/swift/${RINGBUILDER##*/} | /bin/sh

		swift-ring-builder account.builder rebalance
		swift-ring-builder container.builder rebalance
		swift-ring-builder object.builder rebalance

		chown -R swift:swift /etc/swift

		openstack-config --set /etc/swift/proxy-server.conf filter:cache memcache_servers ${privateIP}:\${PORT}
		openstack-config --set /etc/swift/proxy-server.conf filter:authtoken delay_auth_decision true
		openstack-config --set /etc/swift/proxy-server.conf filter:authtoken admin_tenant_name service
		openstack-config --set /etc/swift/proxy-server.conf filter:authtoken admin_user swift
		openstack-config --set /etc/swift/proxy-server.conf filter:authtoken admin_password ${SWIFT_PASS:-sw1ftpw}
		openstack-config --set /etc/swift/proxy-server.conf filter:authtoken auth_host ${CONTROLLER_IP:-${CONTROLLER:-10.132.60.141}}

		chkconfig openstack-swift-proxy on

	EOF
fi
${CAT}<<-EOF
	#service openstack-nova-compute restart
	#service neutron-openvswitch-agent start
	#chkconfig openstack-nova-compute on
	chkconfig neutron-openvswitch-agent on
	#chkconfig openvswitch on
	pkill -f ovs-vsctl
EOF
}
