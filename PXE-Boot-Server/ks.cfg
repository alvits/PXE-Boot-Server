# Kickstart file automatically generated by anaconda.

install
keyboard us
lang en_US.UTF-8
#key --skip
skipx
#cdrom
network --device=eth0 --bootproto=dhcp --hostname=kickstart
rootpw --iscrypted $1$9MvY1qTb$NBpZcwsvAcztQirMMJrE7/
firewall --disabled
authconfig --enableshadow --enablemd5
selinux --disabled
timezone --utc America/Los_Angeles
zerombr yes
reboot --eject
bootloader --location=mbr --driveorder=cciss/c0d0 --append="rhgb quiet noapic"
services --disabled acpid,anacron,apmd,arptables_jf,atd,auditd,autofs,avahi-daemon,bluetooth,cpuspeed,cups,gpm,hidd,isdn,kudzu,mcstrans,mdmonitor,netfs,nfslock,rpcgssd,rhnsd,pcmcia,pcscd,portmap,rpcidmapd,restorecond,setroubleshoot,xfs,yum-updatesd,sendmail,rawdevices
services --enabled dhcpd,httpd,xinetd,tftp,ntpd
# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work
clearpart --all --initlabel
part /boot --fstype ext3 --size=100 --ondisk=cciss/c0d0
part pv.100000 --size=1 --grow --ondisk=cciss/c0d0
volgroup VolGroup00 --pesize=32768 pv.100000
logvol / --fstype ext3 --name=LogVol00 --vgname=VolGroup00 --size=2048
logvol swap --fstype swap --name=LogVol01 --vgname=VolGroup00 --recommended
logvol /usr --fstype ext3 --name=LogVol02 --vgname=VolGroup00 --size=5120
logvol /var --fstype ext3 --name=LogVol03 --vgname=VolGroup00 --size=6144
logvol /usr/local --fstype ext3 --name=LogVol04 --vgname=VolGroup00 --size=10240 --grow

%packages
@core
patch
tftp-server
dhcp
syslinux
httpd
mkisofs
curl
createrepo
ntp
-acl
-amtu
-anacron
-aspell
-aspell-en
-at
-atk
-attr
-audit
-audit-libs-python
-authconfig
-autofs
-avahi
-avahi-compat-libdns_sd
-bc
-bind-libs
-bind-utils
-binutils
-bluez-gnome
-bluez-utils
-bzip2
-cairo
-ccid
-checkpolicy
-conman
-coolkey
-cpuspeed
-crash
-cups
-cups-libs
-Deployment_Guide-en-US
-desktop-file-utils
-dhcpv6-client
-dnsmasq
-dos2unix
-dump
-eject
-fbset
-finger
-fipscheck
-firstboot-tui
-fontconfig
-freetype
-ftp
-gamin
-gamin-python
-GConf2
-gettext
-gnupg
-gnutls
-gpm
-groff
-gtk2
-hdparm
-hesiod
-hicolor-icon-theme
-htmlview
-ifd-egate
-ipsec-tools
-iptables-ipv6
-iptstate
-irda-utils
-irqbalance
-jwhois
-ksh
-kudzu
-lftp
-libdaemon
-libdrm
-libevent
-libgssapi
-libICE
-libIDL
-libjpeg
-libnotify
-libpcap
-libpng
-libselinux-python
-libselinux-utils
-libsemanage
-libSM
-libtiff
-libutempter
-libwnck
-libX11
-libXau
-libXcursor
-libXdmcp
-libXext
-libXfixes
-libXft
-libXi
-libXinerama
-libXrandr
-libXrender
-libXres
-libXt
-libXxf86vm
-logwatch
-lsof
-m4
-mailx
-make
-man
-man-pages
-mdadm
-mesa-libGL
-mgetty
-microcode_ctl
-mlocate
-mozldap
-mtr
-nano
-nc
-net-snmp-libs
-NetworkManager
-NetworkManager-glib
-newt
-nfs-utils
-nfs-utils-lib
-notification-deamon
-nscd
-nss_db
-nss_ldap
-nss-tools
-ntsysv
-numactl
-OpenIPMI
-OpenIPMI-libs
-ORBit2
-pango
-paps
-pax
-pcmciautils
-pcsc-lite
-pcsc-lite-libs
-pinfo
-pkinit-nss
-policycoreutils
-portmap
-ppp
-prelink
-procmail
-psacct
-pygobject2
-pyOpenSSL
-quota
-rdate
-rdist
-readahead
-redhat-lsb
-redhat-menus
-rhn-check
-rhn-client-tools
-rhnlib
-rhnsd
-rhn-setup
-rmt
-rng-utils
-rp-pppoe
-rsh
-selinux-policy
-selinux-policy-targeted
-sendmail
-setarch
-setools
-setserial
-setuptool
-slang
-smartmontools
-sos
-specspo
-startup-notification
-stunnel
-sudo
-svrcore
-symlinks
-system-config-network-tui
-system-config-securitylevel-tui
-talk
-tcpdump
-telnet
-time
-tmpwatch
-traceroute
-tree
-udftools
-unix2dos
-unzip
-usbutils
-vconfig
-vixie-cron
-wget
-words
-xorg-x11-filesystem
-ypbind
-yp-tools
-yum-rhn-plugin
-yum-security
-yum-updatesd
-zip

%post
(SOURCE=http://10.50.248.251/os
ARCH=i386
OSVER=CentOS/5.5
VER=${OSVER##*/}
dhclient eth0
if [ ${ARCH} == x86_64 ]; then
	SHMMAX=68719476736
	SHMALL=4294967296
else
	SHMMAX=4294967295
	SHMALL=268435456
fi
if (grep -q net.ipv4.tcp_syncookies /etc/sysctl.conf); then
	grep -n net.ipv4.tcp_syncookies /etc/sysctl.conf | awk -F: '{print $1"c"}' > /tmp/patch.$$
	sysctl -w net.ipv4.tcp_syncookies=1 >> /tmp/patch.$$
	echo "." >> /tmp/patch.$$
	patch -p0 /etc/sysctl.conf < /tmp/patch.$$
else
	echo -e "\n# Controls the use of TCP syncookies" >> /etc/sysctl.conf
	sysctl -w net.ipv4.tcp_syncookies=1 >> /etc/sysctl.conf
fi
if (grep -q kernel.msgmnb /etc/sysctl.conf); then
	grep -n kernel.msgmnb /etc/sysctl.conf | awk -F: '{print $1"c"}' > /tmp/patch.$$
	sysctl -w kernel.msgmnb=65536 >> /tmp/patch.$$
	echo "." >> /tmp/patch.$$
	patch -p0 /etc/sysctl.conf < /tmp/patch.$$
else
	echo -e "\n# Controls the maximum size of a message, in bytes" >> /etc/sysctl.conf
	sysctl -w kernel.msgmnb=65536 >> /etc/sysctl.conf
fi
if (grep -q kernel.msgmax /etc/sysctl.conf); then
	grep -n kernel.msgmax /etc/sysctl.conf | awk -F: '{print $1"c"}' > /tmp/patch.$$
	sysctl -w kernel.msgmax=65536 >> /tmp/patch.$$
	echo "." >> /tmp/patch.$$
	patch -p0 /etc/sysctl.conf < /tmp/patch.$$
else
	echo -e "\n# Controls the default maxmimum size of a mesage queue" >> /etc/sysctl.conf
	sysctl -w kernel.msgmax=65536 >> /etc/sysctl.conf
fi
if (grep -q kernel.shmmax /etc/sysctl.conf); then
	grep -n kernel.shmmax /etc/sysctl.conf | awk -F: '{print $1"c"}' > /tmp/patch.$$
	sysctl -w kernel.shmmax=${SHMMAX} >> /tmp/patch.$$
	echo "." >> /tmp/patch.$$
	patch -p0 /etc/sysctl.conf < /tmp/patch.$$
else
	echo -e "\n# Controls the maximum shared segment size, in bytes" >> /etc/sysctl.conf
	sysctl -w kernel.shmmax=${SHMMAX} >> /etc/sysctl.conf
fi
if (grep -q kernel.shmall /etc/sysctl.conf); then
	grep -n kernel.shmall /etc/sysctl.conf | awk -F: '{print $1"c"}' > /tmp/patch.$$
	sysctl -w kernel.shmall=${SHMALL} >> /tmp/patch.$$
	echo "." >> /tmp/patch.$$
	patch -p0 /etc/sysctl.conf < /tmp/patch.$$
else
	echo -e "\n# Controls the maximum number of shared memory segments, in pages" >> /etc/sysctl.conf
	sysctl -w kernel.shmall=${SHMALL} >> /etc/sysctl.conf
fi
rm -f /tmp/patch.$$
cat<<-SYSCTLEOF >> /etc/sysctl.conf
##
# Added by Gemini Mobile 'factory' framework:
##
SYSCTLEOF
sysctl -w net.ipv4.tcp_tw_recycle=1 >> /etc/sysctl.conf
sysctl -w net.ipv4.ip_local_port_range="1024 65535" >> /etc/sysctl.conf
sysctl -w net.ipv4.tcp_max_syn_backlog=16384 >> /etc/sysctl.conf
sysctl -w net.ipv4.tcp_rmem="4096 87380 16777216" >> /etc/sysctl.conf
sysctl -w net.ipv4.tcp_wmem="4096 65536 16777216" >> /etc/sysctl.conf
echo "##" >> /etc/sysctl.conf
sysctl -w net.core.{r,w}mem_{default,max}=16777216 >> /etc/sysctl.conf
sysctl -w net.core.netdev_max_backlog=10240 >> /etc/sysctl.conf
echo "##" >> /etc/sysctl.conf
mkdir -p /tftpboot/os/rhel/{5.5,5.4,5.3,5.2,4.8,4.7,4.6,4.5,4.4}/{i386,x86_64}
mkdir -p /tftpboot/os/CentOS/{5.5,5.3,5.2}/x86_64
mkdir /tftpboot/pxelinux.cfg
cp -p /usr/lib/syslinux/pxelinux.0 /tftpboot/pxelinux.0
cat<<-EOF>/etc/httpd/conf.d/pxeBoot.conf
<Directory /tftpboot/os>
${TAB}	Options Indexes FollowSymLinks
${TAB}	AllowOverride None
</Directory>
<Directory /usr/local/Downloads>
${TAB}	Options Indexes FollowSymLinks
${TAB}	AllowOverride None
</Directory>
Alias /os/apps /usr/local/Downloads/apps
Alias /os/CentOS /tftpboot/os/CentOS
Alias /os/Cluster /usr/local/Downloads/Cluster
Alias /os/conf /usr/local/Downloads/conf
Alias /os/drbd /usr/local/Downloads/drbd
Alias /os/kickstart /usr/local/Downloads/kickstart
Alias /os/psp /usr/local/Downloads/psp
Alias /os/perl /usr/local/Downloads/perl
Alias /os/qlogic /usr/local/Downloads/qlogic
Alias /os/rhel/5Server /tftpboot/os/rhel/5.3
Alias /os/rhel /tftpboot/os/rhel
EOF
cat<<-FSTAB >> /etc/fstab
tmpfs      /tmp      tmpfs   defaults        0 0
/dev/cdrom	/tftpboot/os/rhel/5.3/x86_64	auto	ro,exec,managed	0 0
FSTAB
mkdir /usr/local/Downloads
IP=${SOURCE##*//}
IP=${IP%%/os}
for f in apps Cluster conf drbd kickstart perl psp qlogic
do
	rsync -arzHuq --delete ${IP}::Downloads/${f}/ /usr/local/Downloads/${f}/
done
for f in kickstart-functions bytem-kickstart.sh cluster-kickstart.sh config-kickstart.sh
do
ln -s ../Downloads/kickstart/${f} /usr/local/bin/${f}
done
cat<<-KICKSTART>/etc/sysconfig/kickstart
DEV=eth0
DHCPDCONF=/etc/dhcpd.conf
KICKSTART
cat<<-DHCPDPOOL>/etc/rc.d/init.d/dhcpdpool
#!/bin/sh
#
### BEGIN INIT INFO
# Provides: dhcpdpool
# Default-Start:
# Default-Stop:
# Should-Start:
# Required-Start: \$network
# Required-Stop:
# Short-Description: Change DHCP pool with the current network
# Description: Changing the IP address of sserver requires changing
#              DHCP pool.
### END INIT INFO
#
# The fileds below are left around for legacy tools
#
# chkconfig: 3 60 40
# description: Changing the IP address of sserver requires changing
#              DHCP pool.
# processname: dhcpdpool
# config:

if [ -f /etc/sysconfig/kickstart ]; then
. /etc/sysconfig/kickstart
fi

case "\$1" in
${TAB}	start|restart|reload)
${TAB}		DEV=${DEV:-eth0}
${TAB}		GREP=/bin/grep
${TAB}		IPCALC=/bin/ipcalc
${TAB}		IP=/sbin/ip
${TAB}		AWK=/usr/bin/awk
${TAB}		ECHO=/bin/echo
${TAB}		CAT=/bin/cat
${TAB}		PATCH=/usr/bin/patch
${TAB}		RPM=/bin/rpm
${TAB}		DHCPDCONF=${DHCPDCONF:-$(${RPM} -ql dhcp| ${GREP} -E 'dhcpd.conf$')}
${TAB}		INETADDR=\$(\${IP} addr show dev \${DEV}|\${GREP} -w inet|\${AWK} '{print \$2}')
${TAB}		eval \$(\${IPCALC} -n -m -b \${INETADDR})
${TAB}		START=\$(\${ECHO} \${NETWORK}|\${AWK} -F. '{printf("%d.%d.%d.%d",\$1,\$2,\$3,\$4+2)}')
${TAB}		END=\$(\${ECHO} \${BROADCAST}|\${AWK} -F. '{printf("%d.%d.%d.%d",\$1,\$2,\$3,\$4-2)}')
${TAB}		ROUTERS=\$(\${IP} route show|\${AWK} '/default/ {print \$3}')
${TAB}		if (\${GREP} -q ^subnet \${DHCPDCONF});	then
${TAB}			\${GREP} -n next-server \${DHCPDCONF} | \${AWK} -F: '{print \$1"c"}' >> /tmp/patch.\$\$
${TAB}			\${ECHO} "	next-server \${INETADDR%%/*};" >> /tmp/patch.\$\$
${TAB}			\${ECHO} "." >> /tmp/patch.\$\$
${TAB}			\${GREP} -n subnet-mask \${DHCPDCONF} | \${AWK} -F: '{print \$1"c"}' >> /tmp/patch.\$\$
${TAB}			\${ECHO} "option subnet-mask \${NETMASK};" >> /tmp/patch.\$\$
${TAB}			\${ECHO} "." >> /tmp/patch.\$\$
${TAB}			\${GREP} -n ^option\ routers \${DHCPDCONF} | \${AWK} -F: '{print \$1"c"}' >> /tmp/patch.\$\$
${TAB}			\${ECHO} "option routers \${ROUTERS};" >> /tmp/patch.\$\$
${TAB}			\${ECHO} "." >> /tmp/patch.\$\$
${TAB}			\${GREP} -n ^range \${DHCPDCONF} | \${AWK} -F: '{print \$1"c"}' >> /tmp/patch.\$\$
${TAB}			\${ECHO} "range \${START} \${END};" >> /tmp/patch.\$\$
${TAB}			\${ECHO} "." >> /tmp/patch.\$\$
${TAB}			\${GREP} -n ^subnet \${DHCPDCONF} | \${AWK} -F: '{print \$1"c"}' >> /tmp/patch.\$\$
${TAB}			\${ECHO} "subnet \${NETWORK} netmask \${NETMASK} {" >> /tmp/patch.\$\$
${TAB}			\${ECHO} "." >> /tmp/patch.\$\$
${TAB}			\${PATCH} -p0 \${DHCPDCONF} < /tmp/patch.\$\$
${TAB}		else
${TAB}			\${CAT}<<-EOF>>\${DHCPDCONF}
${TAB}
${TAB}			ddns-update-style interim;
${TAB}			subnet \${NETWORK} netmask \${NETMASK} {
${TAB}			range \${START} \${END};
${TAB}			default-lease-time 3600;
${TAB}			max-lease-time 4800;
${TAB}			option routers \${ROUTERS};
${TAB}			option subnet-mask \${NETMASK};
${TAB}			option time-offset -8;
${TAB}			}
${TAB}			group {
${TAB}			\${TAB}	filename "pxelinux.0";
${TAB}			\${TAB}	next-server \${INETADDR%%/*};
${TAB}			}
${TAB}			EOF
${TAB}		fi
${TAB}	;;
esac
DHCPDPOOL
chmod +x /etc/rc.d/init.d/dhcpdpool
chkconfig --add dhcpdpool) > /root/post.log 2>&1
